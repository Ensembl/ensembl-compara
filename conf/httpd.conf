###############################################################################
#   Server Config for Ensembl
#   In a mod_perl stylee. 
#
#   You should edit the variables in SiteDefs.pm
#
#   The sections which need to know the ServerRoot are in the <Perl></Perl>
#   section.  Below the Perl section is standard httpd.conf configuration.
###############################################################################

TraceEnable off
AddDefaultCharset utf-8

####
# Load the required apache modules (unless built-into httpd)
# The .so files can be built with apxs if missing
<IfModule !perl_module>
LoadModule perl_module modules/mod_perl.so
</IfModule>
<IfModule !alias_module>
LoadModule alias_module modules/mod_alias.so
</IfModule>
<IfModule !authn_file_module>
LoadModule authn_file_module modules/mod_authn_file.so
</IfModule>
<IfModule !authz_host_module>
LoadModule authz_host_module modules/mod_authz_host.so
</IfModule>
<IfModule !autoindex_module>
LoadModule autoindex_module modules/mod_autoindex.so
</IfModule>
<IfModule !deflate_module>
LoadModule deflate_module modules/mod_deflate.so
</IfModule>
<IfModule !dir_module>
LoadModule dir_module modules/mod_dir.so
</IfModule>
<IfModule !env_module>
LoadModule env_module modules/mod_env.so
</IfModule>
<IfModule !headers_module>
LoadModule headers_module modules/mod_headers.so
</IfModule>
<IfModule !log_config_module>
LoadModule log_config_module modules/mod_log_config.so
</IfModule>
<IfModule !mime_module>
LoadModule mime_module modules/mod_mime.so
</IfModule>
<IfModule !negotiation_module>
LoadModule negotiation_module modules/mod_negotiation.so
</IfModule>
<IfModule !setenvif_module>
LoadModule setenvif_module modules/mod_setenvif.so
</IfModule>
<IfModule !status_module>
LoadModule status_module modules/mod_status.so
</IfModule>
<IfModule !expires_module>
LoadModule expires_module modules/mod_expires.so
</IfModule>
<IfModule !rewrite_module>
LoadModule rewrite_module modules/mod_rewrite.so
</IfModule>
<IfModule !proxy_module>
LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
LoadModule proxy_http_module modules/mod_proxy_http.so
</IfModule>

# Rate limiting (currently only for Biomart POSTs).
# SECURITY should be defined if you have the mod_security and mod_unique_id
# in your apache. (Does nothing except load modules)
# RATELIMIT should also be defined if you want it to rate-limit biomart
<IfDefine SECURITY>
<IfModule !unique_id_module>
LoadModule unique_id_module modules/mod_unique_id.so
</IfModule>
<IfModule !security2_module>
LoadModule security2_module modules/mod_security2.so 
</IfModule>
<IfDefine RATELIMIT>
SecRuleEngine On
SecDataDir /tmp
# The below establishes the rate-limit, re the Sec(Rule|Action) lines.
# 1st line: posts only
# 2nd line: establish a record (type ip) with key of remote address
# 3rd line: decrease by one a counter every two seconds (1/2)
# 4th line: if counter gets over 5, deny the reuqest (@gt 5)
# 5th line: increase counter by 1
<LocationMatch "^/biomart">
  ErrorDocument 509 "Rate Limit Exceeded please contact helpdesk@ensembl.org"
  SecRule REQUEST_METHOD !^POST$ allow,nolog,id:1
  SecAction initcol:ip=%{REQUEST_HEADERS:X-Cluster-Client-Ip},pass,nolog,id:2
  SecAction "phase:5,deprecatevar:ip.biomartcounter=1/1,pass,nolog,id:3"
  SecRule IP:BIOMARTCOUNTER "@gt 100" "phase:2,pause:300,deny,status:509,setenv:RATELIMITED,skip:1,nolog,id:4"
  SecAction "phase:2,pass,setvar:ip.biomartcounter=+1,nolog,id:5"
  Header always set Retry-After "10" env=RATELIMITED
</LocationMatch>
</IfDefine>
</IfDefine>
# End rate limiting

<Perl>
warn "\n========================\n";
warn "Using Perl $^V\n";
warn "========================\n\n";
</Perl>

<IfDefine ec2>
<Perl>
  warn " Starting up as mirror machine\n"
</Perl>
</IfDefine>
<IfDefine !ec2>
<Perl>
  warn " Starting up as non-mirror machine\n"
</Perl>
</IfDefine>

<Proxy *>
    Order deny,allow
    Allow from all
</Proxy>
#
####
<IfDefine ec2>
Header edit X-Forwarded-For ,.*$ ""

# Mirrors specific redirects
RewriteEngine on

RedirectMatch 404 ^/sitemaps/.*$
# Tools redirect
RewriteCond "%{REQUEST_URI}" ".*Tools/.*"
RewriteRule /(.*) http://www.ensembl.org/$1 [P]
RewriteCond "%{REQUEST_URI}" ".*/Config/Blast/.*"
RewriteRule /(.*) http://www.ensembl.org/$1 [P]

# piwik
ProxyPass        /piwik.php http://www.ensembl.org/piwik.php
ProxyPassReverse /piwik.php http://www.ensembl.org/piwik.php

# Blocking naughty robots.
# You need both of these for each bot.
# Don't block the loadbalancer by accident!
# Only needed on mirrors: use ifconfig at Hinx

# RewriteCond "%{HTTP:X-FORWARDED-FOR}" "^138\.26\.59\.33$"
# RewriteRule .* - [F]
</IfDefine>

#### Biomart redirect ####
<IfDefine HAS_DEDICATED_MART>
RewriteEngine On

#For debugging redirect
#RewriteLog "/path/to/logs/rewrite.log"
#RewriteLogLevel 3

# Biomart incomplete URI
RedirectMatch ^\/biomart\/?$ /biomart/martview
# Biomart proxy redirect
RewriteCond "%{REQUEST_URI}" "^/biomart/.*"
RewriteRule /(.*) %{ENV:ENSEMBL_MART_SERVERNAME}/$1 [P]

RewriteCond "%{HTTP_REFERER}" "/.*/(martview|martontology)"
RewriteRule /((.*)\.(css|js|gif|png))$ %{ENV:ENSEMBL_MART_SERVERNAME}/$1 [P]
</IfDefine>

#######################################################

Header unset Etag
FileETag None

####
# Enable debugging if specified. Must be very early.
# More code later which must be very late.
<IfDefine PERLDB>
  PerlSetEnv PERLDB 1
  <Perl>
    use Apache::DB ();
    Apache::DB->init;
  </Perl>
</IfDefine>
#
####

<IfDefine STARTUP_VERBOSE>
  PerlSetEnv STARTUP_VERBOSE 1
</IfDefine>

PerlPassEnv HTTP_PROXY

<Perl>

use Apache2::Resource;
use Sys::Hostname;
use File::Basename qw(dirname);

###############################################################################
# Load the Local Config from SiteDefs.pm
###############################################################################
  
eval {
  require sprintf '%s/../conf/includeSiteDefs.pl', dirname($0);
};

die "Can't use SiteDefs.pm - $@\n" if $@;

$MaxClients      = $SiteDefs::ENSEMBL_MAX_CLIENTS || 50;
$MinSpareServers = $SiteDefs::ENSEMBL_MIN_SPARE_SERVERS;
$MaxSpareServers = $SiteDefs::ENSEMBL_MAX_SPARE_SERVERS;
$MaxRequestsPerChild = 1000;
$StartServers    = $SiteDefs::ENSEMBL_START_SERVERS;

@Listen          = ($SiteDefs::ENSEMBL_PORT);

$ServerAdmin     = $SiteDefs::ENSEMBL_SERVERADMIN;
$ServerName      = $SiteDefs::ENSEMBL_SERVERNAME;

#####################
#   Set server root
#####################
my $hostname = Sys::Hostname::hostname;

warn " Starting up Ensembl server on host: $hostname\n\n";

$PidFile      = $SiteDefs::ENSEMBL_PIDFILE   if $SiteDefs::ENSEMBL_PIDFILE;
$ErrorLog     = $SiteDefs::ENSEMBL_ERRORLOG  if $SiteDefs::ENSEMBL_ERRORLOG;
$CustomLog    = $SiteDefs::ENSEMBL_CUSTOMLOG if $SiteDefs::ENSEMBL_CUSTOMLOG;

$ServerRoot   = $SiteDefs::ENSEMBL_WEBROOT;
$DocumentRoot = $SiteDefs::ENSEMBL_WEBROOT . '/htdocs';

#######################################################################
# ScriptAlias: This controls which directories contain server scripts.
#######################################################################
@ScriptAlias = (
  [ '/perl'    => "$ServerRoot/perl"                 ],
  [ '/biomart' => "$ServerRoot/biomart-perl/cgi-bin" ],
);

########################
#   Directory configs
########################
$DirectoryIndex = 'index.html index.wml';

## Perl handlers etc

@PerlModule                 = qw(EnsEMBL::Web::Apache::Handlers);
@PerlChildInitHandler       = qw(Apache2::Resource EnsEMBL::Web::Apache::Handlers::childInitHandler);
@PerlPostReadRequestHandler = qw(EnsEMBL::Web::Apache::Handlers::postReadRequestHandler);
@PerlTransHandler           = qw(EnsEMBL::Web::Apache::Handlers::transHandler);
@PerlHandler                = qw(EnsEMBL::Web::Apache::Handlers::handler);
@PerlLogHandler             = qw(EnsEMBL::Web::Apache::Handlers::logHandler);
@PerlCleanupHandler         = qw(EnsEMBL::Web::Apache::Handlers::cleanupHandler);
@PerlChildExitHandler       = qw(EnsEMBL::Web::Apache::Handlers::childExitHandler);

$Location{'/'} = {
  SetHandler            => 'perl-script',
  PerlHandler           => 'EnsEMBL::Web::Apache::Handlers',
  AddOutputFilterByType => 'DEFLATE text/html text/plain text/xml text/javascript text/css application/x-javascript',
};

$LocationMatch{'^/(merged|minified|packed|packed.0|css|img|js|t|c|i)/'} =
$LocationMatch{'static'} = {
  ExpiresActive  => 'On',
  ExpiresDefault => 'A2592000'
};

#$LocationMatch{'(?i)\.(jpg|jpeg|gif|png|svg|js|css|txt|xml|json|csv|xls|gff|bed|gtf|psl|wig|fa|nh|pdf|swf|gz|tar|zip|jar|ped|htm)$'} = {
#  SetHandler  => 'perl-script',
#  PerlHandler => 'EnsEMBL::Web::Apache::Static'
#};

#$LocationMatch{'Doxygen.+/search/'} = {
#  SetHandler  => 'perl-script',
#  PerlHandler => 'EnsEMBL::Web::Apache::Static'
#};

$Directory{"$ServerRoot"} = {
  AllowOverride => 'None',
};

$Directory{"$ServerRoot/htdocs"} = {
  AllowOverride => 'None',
  Order         => 'allow,deny',
  Allow         => 'from all',
};

###########################################################
# Error Handling /Crash
###########################################################
#$Location{'/Crash'} = {
#  SetHandler  => 'perl-script',
#  PerlHandler => 'EnsEMBL::Web::Apache::ServerError',
#};

###########################################################
# Missing Page Handling /Missing
###########################################################
#$Location{'/Error'} = {
#  SetHandler  => 'perl-script',
#  PerlHandler => 'EnsEMBL::Web::Apache::Error',
#};

###########################################################
# /perl this is the ModPerl::Registry scripts directory
###########################################################
$Location{'/perl'} = {
  SetHandler     => 'perl-script',
  PerlHandler    => 'ModPerl::Registry',
  allow          => 'from all',
  PerlSendHeader => 'On',
};

#############################################################
# Finally,pre-load/pre-compile modules
#############################################################
require "$ServerRoot/conf/perl.startup";

if ($SiteDefs::ENSEMBL_MART_PLUGIN_ENABLED) {
  eval { 
    require 'BioMart/Initializer.pm';
    require 'Cwd.pm';
    BioMart::Initializer->import;
    my $registry_file = Cwd::abs_path(sprintf '%s/martRegistry.xml', $SiteDefs::ENSEMBL_MART_CONF_DIR || "$SiteDefs::ENSEMBL_SERVERROOT/biomart-perl/conf/");
    if (-e $registry_file) {
      print "Using martRegistry.xml: $registry_file\n";
    } else {
      die("ERROR: martRegistry.xml file not found: $registry_file\nSet \$SiteDefs::ENSEMBL_MART_CONF_DIR to the folder containing martRegistry.xml if it doesn't exist in the default biomart-perl/conf folder.");
    }
    my $init = BioMart::Initializer->new(registryFile => $registry_file);
    $main::BIOMART_REGISTRY = $init->getRegistry || die "Can't get registry from initializer";
  };
}

if ($main::BIOMART_REGISTRY) {
  my $settings = $main::BIOMART_REGISTRY->settingsParams;

  warn "========\nBIOMART REGISTRY:\n";

  warn sprintf "URL prefix:  %s\nSession DB:  %s@%s\n",
    $settings->{'urlPrefixes'}{'exturl'},
    $settings->{'sessions'}{'user'},
    $settings->{'sessions'}{'dsn'};

  ## Check for existence of biomart directory
  my $resultsDir = $settings->{'background'}{'resultsDir1'};
  if (-e $resultsDir) {
    warn "Results dir: $resultsDir\n========\n\n";
  }
  else {
    warn "!!! Output directory $resultsDir does not exist. Please create it and ensure it is writeable by the Apache process.\n========\n\n"; 
  }
}

__END__
</Perl>

###############################################################################
####
# Horrible hack to fix ancient perl bug #7013 re lvalues and debugger. 7 years unfixed!
#   The inline C disables debug-wrapping on a method, the perl sub finds lvalue methods
#   to do this to. This means lvalue methods can't be debugged but they do actually work!
<IfDefine PERLDB>
<Perl>
package HorribleHack;

use Inline C => "void lvalues_nodebug(CV* cv) { CvNODEBUG_on(cv); }";

sub fix_lvalues {
  my ($name,$here) = @_;

  foreach my $t (values %$here) {
    next unless *{"$t"}{CODE} and grep { $_ eq 'lvalue' } attributes::get(*{"$t"}{CODE});
    lvalues_nodebug(*{"$t"}{CODE});
  }
  fix_lvalues("$name$_",\%{"$name$_"}) for keys %$here;;
}
fix_lvalues("EnsEMBL::",\%EnsEMBL::);

</Perl>
</IfDefine>
#
####

#######################
# Apache-style Config
#######################
ServerTokens            prod
Timeout                 300
<IfDefine PERLDB>
KeepAlive               Off
MaxClients              1
MaxRequestsPerChild     0
</IfDefine>
<IfDefine !PERLDB>
KeepAlive               On
MaxRequestsPerChild     1000
</IfDefine>
MaxKeepAliveRequests    100
KeepAliveTimeout        15

UseCanonicalName        On

TypesConfig             conf/mime.types
DefaultType             text/plain

<IfModule mod_mime_magic.c>
    MIMEMagicFile       conf/magic
</IfModule>

HostnameLookups         Off

LogLevel                warn

# This is to prevent sending large files as chunks (Chrome on windows occasionally fails to load the entire JavaScript file if its chuncked gzipped)
DeflateBufferSize       1048576

# A log format isn't used unless you tell it to in CutsomLog, so don't worry
# about defining things for mirrors, etc, outside conditionals.
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-agent}i\" %n %T %{Host}i" ec2_ebi

#### Mirrors
#
<IfDefine ec2>
#this for mirror development (same as live at Hinx)
<IfDefine ec2test>
LogFormat               "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat               "[%P/%{ENSEMBL_CHILD_COUNT}e %{ENSEMBL_SCRIPT_TIME}e %{outstream}n/%{instream}n=%{ratio}n] %h/%{HTTP_X_FORWARDED_FOR}e %l/%{ENSEMBL_SESSION_ID}e %u/%{ENSEMBL_USER_ID}e %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{HTTP_X_Requested_With}e\" %{ENSEMBL_SCRIPT_START}e/%{ENSEMBL_SCRIPT_END}e" ensembl_extended
</IfDefine>
<IfDefine !ec2test>
#this for live on mirrors
LogFormat ":%{X-Forwarded-For}i %v %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{Cookie}i\"" urchin_xforwarded
</IfDefine>
</IfDefine>
#
####

#### Not mirrors
#
<IfDefine !ec2>
# this for live at Hinx
LogFormat               "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat               "[%P/%{ENSEMBL_CHILD_COUNT}e %{ENSEMBL_SCRIPT_TIME}e %{outstream}n/%{instream}n=%{ratio}n] %h/%{HTTP_X_FORWARDED_FOR}e %l/%{ENSEMBL_SESSION_ID}e %u/%{ENSEMBL_USER_ID}e %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{HTTP_X_Requested_With}e\" %{ENSEMBL_SCRIPT_START}e/%{ENSEMBL_SCRIPT_END}e" ensembl_extended
</IfDefine>
#
####

ServerSignature         Off

# Handle CGI errors with EnsEMBL::Web::Apache::ServerError
ErrorDocument 500 /Crash
# Handle missing pages with EnsEMBL::Web::Apache::Error
ErrorDocument 400 /Error
ErrorDocument 401 /Error
ErrorDocument 403 /Error
ErrorDocument 404 /Error

IndexOptions FancyIndexing

AddDescription "GZIP compressed document" .gz
AddDescription "tar archive" .tar
AddDescription "GZIP compressed tar archive" .tgz

ReadmeName README
HeaderName HEADER
IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t

AddEncoding x-compress Z
AddEncoding x-gzip gz

AddLanguage en .en
AddLanguage fr .fr
AddLanguage de .de
AddLanguage da .da
AddLanguage el .el
AddLanguage it .it

LanguagePriority en fr de

AddHandler cgi-script .cgi

AddType application/x-httpd-php3 .php3
AddType application/octet-stream .gz

BrowserMatch "Mozilla/2" nokeepalive
BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0

ServerTokens prod
BrowserMatch "RealPlayer 4\.0" force-response-1.0
BrowserMatch "Java/1\.0" force-response-1.0
BrowserMatch "JDK/1\.0" force-response-1.0

#<Location />
#  SetHandler perl-script,
#  PerlHandler EnsEMBL::Web::Apache::Handlers
#  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/javascript text/css application/x-javascript
#</Location>

#<LocationMatch ^/(merged|minified|packed|packed.0|css|img|js|t|c|i)/>
#  ExpiresActive On
#  ExpiresDefault A2592000
#</LocationMatch>

<LocationMatch (?i)\.(jpg|jpeg|gif|png|svg|js|css|txt|xml|json|csv|xls|gff|bed|gtf|psl|wig|fa|nh|pdf|swf|gz|tar|zip|jar|ped|tsv|htm)$>
  SetHandler perl-script
  PerlHandler EnsEMBL::Web::Apache::Static
</LocationMatch>

<LocationMatch Doxygen.+/search/>
  SetHandler perl-script
  PerlHandler EnsEMBL::Web::Apache::Static
</LocationMatch>

#<Directory $ServerRoot>
#  AllowOverride None
#</Directory>

#<Directory $ServerRoot/htdocs>
#  AllowOverride None
#  Order allow,deny
#  Allow from all
#</Directory>

<Location /Crash>
  SetHandler perl-script
  PerlHandler EnsEMBL::Web::Apache::ServerError
</Location>

<Location /Error>
  SetHandler perl-script
  PerlHandler EnsEMBL::Web::Apache::Error
</Location>

#<Location /perl>
#  SetHandler perl-script
#  PerlHandler ModPerl::Registry
#  allow from all
#  PerlSendHeader On
#</Location>

<Location /biomart/martview>
  Options None
  Order allow,deny
  Allow from all
  SetHandler perl-script
  PerlHandler ModPerl::Registry
  Options +ExecCGI
</Location>

<Location /biomart/martservice>
  Options None
  Order allow,deny
  Allow from all
  SetHandler perl-script
  PerlHandler     ModPerl::Registry
  Options +ExecCGI
</Location>

<Location /biomart/martresults>
  Options None
  Order allow,deny
  Allow from all
  SetHandler perl-script
  PerlHandler     ModPerl::Registry
  Options +ExecCGI
</Location>

<Location /biomart/perl-status>
 SetHandler perl-script
  PerlHandler Apache2::status
</Location>

<FilesMatch "\.html?$">
  SetHandler  perl-script
  PerlHandler EnsEMBL::Web::Apache::SSI
</FilesMatch>

<LocationMatch "rss\.xml">
  SetHandler  perl-script
  PerlHandler EnsEMBL::Web::Apache::Rss
</LocationMatch>

<Location /perl>
  Options +ExecCGI
</Location>

<Location /img-cache/hv>
  Order           allow,deny
  Deny            from all
</Location>

<Location /img-cache/kv>
  Order           allow,deny
  Deny            from all
</Location>

ExtendedStatus on

<Location /server_status>
  SetHandler server-status

  Order Deny,Allow
  Deny from all
  Allow from 172.20.11.0/16
  Allow from 172.17.90.0/16
</Location>

<Location ~ "/CVS/">
  Order           allow,deny
  Deny            from all
</Location>

<LocationMatch "/*/Genoverse/fetch_features/*">
  Header set Access-Control-Allow-Origin *
</LocationMatch>

<LocationMatch "/*/ZMenu/*">
  Header set Access-Control-Allow-Origin *
</LocationMatch>

<LocationMatch "/*/Widgets/*">
  Header set Access-Control-Allow-Origin "*"
</LocationMatch>
