os: linux
language: generic

env:
  global:
    # yamllint disable-line rule:line-length
    - secure: bGSZASCtRCcE2VZ3u4hdvjh6CDHe+Uo3MR7B4eobSFFhZVjIN3/DKaGrQYprEeSIB/vb75rveyTheO3qe3lHwq71e18cBk2ulQA6/L0eUJYsoR3u2y7d9whu8dS97IoLzize6hItxJFP8TmRaJBtWqOixyWHNW72X/fKF1a192E=

addons:
  apt:
    packages:
      - graphviz

services:
  - mysql

cache:
  pip: true
  directories:
    - $HOME/deps

# Clone all repositories, setup the directory structure and the environment
before_install:
    # yamllint disable-line rule:indentation
    - cpanm -nq local::lib
    - eval "$(perl -Mlocal::lib=${HOME}/deps)"
    - export ENSEMBL_BRANCH='main'
    - export SECONDARY_BRANCH='main'
    # yamllint disable rule:line-length
    - git clone --depth 1 https://github.com/Ensembl/ensembl-git-tools.git
    - export PATH=$PATH:$PWD/ensembl-git-tools/bin
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-test
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-rest
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-funcgen
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-variation
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-io
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl
    - git-ensembl --clone --branch $ENSEMBL_BRANCH --secondary_branch $SECONDARY_BRANCH --depth 1 ensembl-datacheck
    # yamllint enable rule:line-length
    - git-ensembl --clone --branch main --depth 1 ensembl-hive
    - git-ensembl --clone --branch main --depth 1 ensembl-taxonomy
    - ln -s . ensembl-compara
    - git clone --branch v1.6.x --depth 1 https://github.com/bioperl/bioperl-live
    - git clone --branch release-1-6-9 --depth 1 https://github.com/bioperl/bioperl-run
    - sed -i '/Bio::DB::HTS/d' ensembl-rest/cpanfile
    # Setup the environment variables
    - export ENSEMBL_ROOT_DIR=$PWD
    - export EHIVE_ROOT_DIR=$PWD/ensembl-hive
    - export PERL5LIB=$PERL5LIB:$PWD/bioperl-live
    - export PERL5LIB=$PERL5LIB:$PWD/bioperl-run/lib
    - export PERL5LIB=$PERL5LIB:$PWD/modules
    - export PERL5LIB=$PERL5LIB:$PWD/travisci/fake_libs/
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-rest/lib
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-hive/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-test/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-funcgen/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-variation/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-taxonomy/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-io/modules
    - export PERL5LIB=$PERL5LIB:$PWD/ensembl-datacheck/lib
    - cp -f travisci/MultiTestDB.conf.travisci  modules/t/MultiTestDB.conf
    - cp -f ensembl-rest/travisci/MultiTestDB.conf.travisci ensembl-rest/t/MultiTestDB.conf
    - cp -f ensembl/travisci/MultiTestDB.conf.travisci.mysql  ensembl/modules/t/MultiTestDB.conf
    - mysql -u root -h localhost -e 'GRANT ALL PRIVILEGES ON *.* TO "travis"@"%"'


# What jobs to run and in which order
jobs:
  include:
    - language: perl
      perl: 5.30
      name: "Housekeeping (all languages)"
      install:
        - sudo apt-get -y install shellcheck
        # --user is required on Perl VMs because it's the system pip/python
        - pip install --user yamllint
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
        - cpanm --quiet --installdeps --notest .
        - yamllint --version
        - shellcheck --version
      script: prove -rv ./travisci/all-housekeeping/

    - language: perl
      perl: 5.30
      name: "SQL unit tests"
      install:
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
      script: prove -r ./travisci/sql-unittest/

    - language: perl
      perl: 5.26
      name: "Perl unit tests on the minimum version"
      env:
        - COVERAGE=true
      install:
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-hive/cpanfile .
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-rest/cpanfile .
        - cpanm --quiet --installdeps --notest .
        - cpanm --quiet --notest Devel::Cover::Report::Codecov
      script: ./travisci/perl-unittest_harness.sh

    - language: perl
      perl: 5.30
      name: "Perl unit tests on the latest version, with code coverage"
      env:
        - COVERAGE=true
      install:
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-hive/cpanfile .
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-rest/cpanfile .
        - cpanm --quiet --installdeps --notest .
        - cpanm --quiet --notest Devel::Cover::Report::Codecov
      script: ./travisci/perl-unittest_harness.sh
      after_success:
        - cover --nosummary -report codecov

    - language: perl
      perl: 5.30
      name: "Perl external unit tests on the latest version, with code coverage"
      env:
        - COVERAGE=true
      install:
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
        # 8.43 is the last version compatible with Perl 5.14
        - cpanm --quiet --notest Mojolicious@8.43
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-rest/cpanfile .
        - cpanm --quiet --installdeps --notest --cpanfile ensembl-hive/cpanfile .
        - cpanm --quiet --installdeps --notest .
        - cpanm --quiet --notest Devel::Cover::Report::Codecov
      script: ./travisci/perl-external_unittest_harness.sh
      after_success:
        - cover --nosummary -report codecov

    - language: perl
      perl: 5.30
      name: "Perl linter"
      install:
        - cpanm --quiet --installdeps --notest --cpanfile ensembl/cpanfile .
      script: ./travisci/perl-linter_harness.sh

    - language: python
      dist: bionic
      python: "3.10"
      name: "Python unit tests on the minimum version"
      install:
        - pip install --upgrade pip
        - pip install .[test]
      script:
        - pytest --server=mysql://travis@127.0.0.1:3306/

    - language: python
      dist: bionic
      python: "3.11"
      name: "Python unit tests on the latest version, with code coverage"
      install:
        - pip install --upgrade pip
        - pip install codecov
        - pip install .[test]
      script:
        # yamllint disable rule:line-length
        - pytest --cov=./ --cov-report=term-missing --server=mysql://travis@127.0.0.1:3306/
        # yamllint enable rule:line-length
      after_success:
        - codecov

    - language: python
      dist: bionic
      python: "3.10"
      name: "Python linter"
      install:
        - pip install --upgrade pip
        - pip uninstall dataclasses -y
        - pip install .[test]
      script: ./travisci/python-linter_harness.sh

notifications:
  email:
    on_success: always
    on_failure: always
