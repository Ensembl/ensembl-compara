#!/usr/bin/env perl

=head1 LICENSE

Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
Copyright [2016-2018] EMBL-European Bioinformatics Institute

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=cut

# Rebuilds packed in temporary location, ensuring restart -r will work in
# the meantime. Takes species to rebuild as argument. ALL rebuilds all.
# No argument only rebuilds config.packed
# 
# ./build_packed
# ./build_packed homo_sapiens mus_musculus
# ./build_packed ALL

use strict;
use warnings;

use FindBin qw($Bin);

# The following line is a hack to allow MySQL to always autoreconnect. This is the
# default behaviour in mod_perl and CGI scripts, which is why we never notice in
# other situations. Here we lie to DBI that we are a CGI script.
$ENV{"GATEWAY_INTERFACE"} = 1;

BEGIN {
  require "$Bin/helper.pl";
}

sub echosys {
  my $cmd = shift;

  warn "$cmd\n";
  system("$cmd") && die;
}

use File::Path qw(rmtree);
use EnsEMBL::Web::SpeciesDefs;

my $dir = "$SiteDefs::ENSEMBL_TMP_DIR/rebuild";
my $dest = $SiteDefs::ENSEMBL_SYS_DIR;
warn "Building packeds to $dir (ultimate destination $dest)\n";

rmtree($dir,{ safe => 1 });
mkdir $dir;
mkdir "$dir/conf";
mkdir "$dir/conf/packed";

if(($ARGV[0]||'') eq 'SOME') {
  $| = 1;
  print "\nPlease enter space separated list of packeds to rebuild.\n";
  print "Each entry should be the binomial name in lowercase separated by _\n";
  print "eg \"rattus_norvegicus saimiri_boliviensis_boliviensis\"\n\n";
  @ARGV = split(" ",<STDIN>);
}

if(!@ARGV or $ARGV[0] ne "ALL") {
  echosys("cp -v $dest/conf/packed/* $dir/conf/packed");
  echosys("rm $dir/conf/packed/$_.*") for @ARGV;
}

$SiteDefs::ENSEMBL_SYS_DIR = $dir;
$EnsEMBL::Web::SpeciesDefs::CONF={ '_storage' => 0 }; # Don't parse automatically
my $sd = EnsEMBL::Web::SpeciesDefs->new();
delete $sd->{'_storage'};
$sd->{'_start_time'} = time;
$sd->_parse;
$sd->store;

if(($ARGV[0]||'') eq "ALL") {
  echosys("cp -v $dir/conf/packed/* $dest/conf/packed");
} else {
  echosys("cp -v $dir/conf/packed/$_.* $dest/conf/packed") for @ARGV;
}
echosys("cp -v $dir/conf/*.config.packed $dest/conf/");
#rmtree($dir,{ safe => 1 });

1;

