
The perl script subsetAxtFromAndToCompara.pl that is used for generating 
the HCR alignments, uses the subsetAxt executable to filter out high 
conserved alignments using the tight matrix and score threshold of 
3400 (basically allows alignments of 34 bp minimum length).

The executables are in 
/nfs/acari/abel/bin/alpha-dec-osf4.0/subsetAxt
/nfs/acari/abel/bin/i386/subsetAxt
and are the ones used in subsetAxtFromAndToCompara.pl.
(See notes below if you want to compile it yourself)

Here is the process to generate the HCR stored in a compara database

> mkdir /ecs2/work4/compara_abel_cara/ensembl_release_26/compara/hcr/Hs35Mm33

> cd /ecs2/work4/compara_abel_cara/ensembl_release_26/compara/hcr/Hs35Mm33

> mysql -h ecs2 -P3362 -u ensro -N -e "select name from dnafrag where genome_db_id=1" abel_ensembl_compara_26_1 |sort -u > Hs35_chr_names

cat Hs35_chr_names | while read i;do bsub -q normal -Ralpha -o $i.out ~/src/ensembl_main/ensembl-compara/scripts/hcr/subsetAxtFromAndToCompara.pl --src_dbname abelcompara26 --seq_region $i --qy human --tg mouse --src_method_link_type BLASTZ_NET --dest_method_link_type BLASTZ_NET_TIGHT ;done

The HCR alignments are stored in the same compara database that was used to fetch the alignments to be rescored (given by --src_dbname). If you want to store them in another compara database use --dest_dbname.
Obviously you should your registry file set up with the aliases, you want to use.
The default matrix used is /nfs/acari/abel/src/ensembl_main/ensembl-compara/scripts/hcr/tight.mat.
You have --help to get all the parameters explained.

Check that all the loading have gone well
> ls |grep out|while read i;do echo -n $i" ";awk '/^Subject/ {printf $NF" "} /Job was executed/ {print $6;exit}' $i;done|awk '{print $2}'|sort |uniq -c
110 Done

This number should be the same as 

> wc -l Hs35_chr_names
        110 Hs35_chr_names

And it is done.

Compiling subsetAxt.c
=====================
It is a C executable from UCSC. The C source code is available via cvs

mkdir ~/src
cd ~/src
cvs -d :pserver:anonymous@genome-test.cse.ucsc.edu:/cbse login

password is 'genome'

cvs -d :pserver:anonymous@genome-test.cse.ucsc.edu:/cbse co -d ucsc_code_i386 kent
or
cvs -d :pserver:anonymous@genome-test.cse.ucsc.edu:/cbse co -d ucsc_code_alpha kent

depending on which kind of machine you want to compile. There is a 
ucsc_code_i386/src/README that explain how to compile, but here is a quick start

cd ucsc_code_i386/src/lib
make
cd ../jkOwnLib/
make
cd ../lib/i386/
ln -s jkOwnLib.a jkhgap.a
cd ../../hg/mouseStuff/subsetAxt/
make

axt Format definition
=====================
(taken from http://genome-test.cse.ucsc.edu/goldenPath/14nov2002/vsMm2/)

All alignments are in 'axt' format.   Each alignment
contains three lines and is separated from the next
alignment by a space:   

    Line 1 - summarizes the alignment.   
    Line 2 - contains the human sequence with inserts.  
    Line 3 - contains the mouse sequence with inserts.  

The summary line contains 9 blank separated fields with the 
following meanings:

1 - Alignment number.  The first alignment in a file
    is numbered 0,  the next 1, and so forth.
2 - Human chromosome.
3 - Start in human chromosome.  The first base is
    numbered 1.
4 - End in human chromosome.  The end base is included.
5 - Mouse chromosome.
6 - Start in mouse.
7 - End in mouse.
8 - Mouse strand. WARNING If this is '-' then the mouse start/
    mouse end fields are relative to the reverse complemented
    mouse chromosome.
9 - Alignment score.
